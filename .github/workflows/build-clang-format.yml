name: Build clang-format with Pascal support

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout this repository
      uses: actions/checkout@v4
      with:
        path: clang-format-build

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build build-essential python3 python3-pip python3-venv

    - name: Clone LLVM with Pascal support
      run: |
        git clone --depth 1 --branch feature/pascal-language-support https://github.com/partouf/llvm-project.git llvm-project

    - name: Configure CMake
      run: |
        cd llvm-project
        cmake -S llvm -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DLLVM_ENABLE_PROJECTS="clang" \
          -DLLVM_TARGETS_TO_BUILD="X86" \
          -DCMAKE_C_COMPILER=gcc \
          -DCMAKE_CXX_COMPILER=g++

    - name: Build clang-format
      run: |
        cd llvm-project
        ninja -C build clang-format

    - name: Run Pascal formatting tests
      run: |
        # Verify clang-format was built successfully
        ls -la llvm-project/build/bin/clang-format
        ./llvm-project/build/bin/clang-format --version
        
        # Set up Python environment and run tests
        cd clang-format-build
        python3 -m venv test_venv
        source test_venv/bin/activate
        pip install -r requirements.txt
        
        # Export path to built clang-format
        export CLANG_FORMAT_PATH="$GITHUB_WORKSPACE/llvm-project/build/bin/clang-format"
        echo "Using clang-format at: $CLANG_FORMAT_PATH"
        
        # Run formatting tests
        python -m pytest tests/test_pascal_formatting.py -v --tb=short
        
        # If tests fail, show what the current formatting looks like
        if [ $? -ne 0 ]; then
          echo "=== Pascal formatting tests failed ==="
          echo "Current formatting output:"
          if [ -f tests/*.received.txt ]; then
            cat tests/*.received.txt | head -20
          fi
          exit 1
        fi

    - name: Create Linux archive
      run: |
        cd llvm-project
        mkdir -p clang-format-pascal-linux
        cp build/bin/clang-format clang-format-pascal-linux/
        cp clang/tools/clang-format/clang-format-diff.py clang-format-pascal-linux/
        echo "clang-format with Pascal language support - Linux x64" > clang-format-pascal-linux/README.txt
        echo "Built from: https://github.com/partouf/llvm-project/tree/feature/pascal-language-support" >> clang-format-pascal-linux/README.txt
        tar -czf clang-format-pascal-linux.tar.gz clang-format-pascal-linux/

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: clang-format-pascal-linux
        path: llvm-project/clang-format-pascal-linux.tar.gz
        retention-days: 30

  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Setup MSVC environment
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install dependencies
      run: |
        choco install cmake ninja

    - name: Clone LLVM with Pascal support
      run: |
        git clone --depth 1 --branch feature/pascal-language-support https://github.com/partouf/llvm-project.git llvm-project

    - name: Configure CMake
      run: |
        cd llvm-project
        cmake -S llvm -B build -G Ninja ^
          -DCMAKE_BUILD_TYPE=Release ^
          -DLLVM_ENABLE_PROJECTS="clang" ^
          -DLLVM_TARGETS_TO_BUILD="X86"
      shell: cmd

    - name: Build clang-format
      run: |
        cd llvm-project
        ninja -C build clang-format
      shell: cmd

    - name: Create Windows archive
      run: |
        cd llvm-project
        mkdir clang-format-pascal-windows
        copy build\bin\clang-format.exe clang-format-pascal-windows\
        copy clang\tools\clang-format\clang-format-diff.py clang-format-pascal-windows\
        echo clang-format with Pascal language support - Windows x64 > clang-format-pascal-windows\README.txt
        echo Built from: https://github.com/partouf/llvm-project/tree/feature/pascal-language-support >> clang-format-pascal-windows\README.txt
        powershell -Command "Compress-Archive -Path clang-format-pascal-windows -DestinationPath clang-format-pascal-windows.zip"
      shell: cmd

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: clang-format-pascal-windows
        path: llvm-project/clang-format-pascal-windows.zip
        retention-days: 30